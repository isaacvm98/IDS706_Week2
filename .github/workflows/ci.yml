name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black pytest-cov
        
    - name: Check code formatting with Black
      run: |
        black --check --diff *.py
        
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. Line length should match Black's default (88)
        flake8 basic_data_analysis.py test_stock_analysis.py --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics --ignore=E203,W503
        
    - name: Run tests with pytest
      run: |
        python -m pytest -vv --cov=basic_data_analysis --cov-report=xml --cov-report=term test_stock_analysis.py
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t mexican-stock-analysis .
        
    - name: Run tests in Docker
      run: |
        docker run --rm -v $(pwd):/app mexican-stock-analysis python -m pytest -vv test_stock_analysis.py
        
    - name: Run linting in Docker
      run: |
        docker run --rm -v $(pwd):/app mexican-stock-analysis sh -c "black --check *.py && flake8 basic_data_analysis.py test_stock_analysis.py --max-line-length=88 --ignore=E203,W503"